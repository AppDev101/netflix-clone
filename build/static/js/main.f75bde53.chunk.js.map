{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","screens/HomeScreen.js","firebase.js","screens/SignUpScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/ProfileScreen.js","App.js","app/store.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","tmdbId","id","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","videoId","opts","height","width","playerVars","auotplay","API_KEY","netflixMovies","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","requests","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","history","useNavigate","window","addEventListener","scrollY","removeEventListener","HomeScreen","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getFirestore","getAuth","createUser","createUserWithEmailAndPassword","signInUser","signInWithEmailAndPassword","SignUpScreen","emailRef","useRef","passwordRef","ref","placeholder","type","e","preventDefault","current","value","authUser","alert","message","LoginScreen","signIn","setSignIn","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","ProfileScreen","useSelector","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","path","element","configureStore","reducer","userReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f75bde53.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"300\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      auotplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || movie?.title, { tmdbId: movie?.id } || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {/* title */}\r\n      <h2>{title}</h2>\r\n\r\n      {/* container > posters */}\r\n      <div className=\"row__posters\">\r\n        {/* several row poster */}\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"66e52cef2ce03561e1554980be35195b\";\r\n\r\nconst netflixMovies = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default netflixMovies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n\r\n        <div className=\"banner--fadeBottom\" />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleShow);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        onClick={() => {\r\n          history(\"/\");\r\n        }}\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/6/67/NewNetflixLogo.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n\r\n      <img\r\n        onClick={() => {\r\n          history(\"/profile\");\r\n        }}\r\n        className=\"nav__avatar\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport \"./HomeScreen.css\";\nimport Row from \"../Row\";\nimport requests from \"../requests\";\nimport Banner from \"../Banner\";\nimport Nav from \"../Nav\";\n\nfunction HomeScreen() {\n  return (\n    <div className=\"homeScreen\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","import { initializeApp } from \"@firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { getFirestore } from \"@firebase/firestore/lite\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDdOCLr9Z4dayJIM-CURLvxJDvqY-cW_l8\",\r\n  authDomain: \"netflix-clone-a48ea.firebaseapp.com\",\r\n  projectId: \"netflix-clone-a48ea\",\r\n  storageBucket: \"netflix-clone-a48ea.appspot.com\",\r\n  messagingSenderId: \"934911482273\",\r\n  appId: \"1:934911482273:web:858d7e43c33deb400513e0\",\r\n  measurementId: \"G-B69Z4133W2\",\r\n};\r\n\r\nconst firebase = initializeApp(firebaseConfig);\r\nconst db = getFirestore(firebase);\r\nconst auth = getAuth();\r\nconst [createUser, signInUser] = [\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n];\r\n\r\nexport { createUser, signInUser };\r\nexport { auth };\r\nexport default db;\r\n","import { auth, createUser, signInUser } from \"../firebase\";\r\nimport React, { useRef } from \"react\";\r\nimport \"./SignUpScreen.css\";\r\n\r\nfunction SignUpScreen() {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    createUser(auth, emailRef.current.value, passwordRef.current.value)\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    signInUser(auth, emailRef.current.value, passwordRef.current.value)\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"signupScreen\">\r\n      <form>\r\n        <h1>Sign In</h1>\r\n        <input ref={emailRef} placeholder=\"Email\" type=\"email\" />\r\n        <input ref={passwordRef} placeholder=\"Password\" type=\"password\"></input>\r\n        <button type=\"submit\" onClick={signIn}>\r\n          Sign In\r\n        </button>\r\n\r\n        <h4>\r\n          <span className=\"signupScreen__gray\">New to Netflix? </span>\r\n          <span className=\"signupScreen__link\" onClick={register}>\r\n            Sign Up Now.\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpScreen;\r\n","import React, { useState } from \"react\";\r\nimport \"./LoginScreen.css\";\r\nimport SignUpScreen from \"./SignUpScreen\";\r\n\r\nfunction LoginScreen() {\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  return (\r\n    <div className=\"loginScreen\">\r\n      <div className=\"loginScreen__background\">\r\n        <img\r\n          onClick={() => setSignIn(false)}\r\n          className=\"loginScreen__logo\"\r\n          src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <button onClick={() => setSignIn(true)} className=\"loginScreen__button\">\r\n          Sign In\r\n        </button>\r\n\r\n        <div className=\"loginScreen__gradient\" />\r\n\r\n        <div className=\"loginScreen__body\">\r\n          {signIn ? (\r\n            <SignUpScreen />\r\n          ) : (\r\n            <>\r\n              <h1>Unlimited files, TV programmes and more.</h1>\r\n              <h2>Watch anywhere. Cancel at any time.</h2>\r\n              <h3>\r\n                Ready to watch? Enter your email to create or restart your\r\n                membership.\r\n              </h3>\r\n\r\n              <div className=\"loginScreen__input\">\r\n                <form>\r\n                  <input type=\"email\" placeholder=\"Email Address\" />\r\n                  <button\r\n                    onClick={() => setSignIn(true)}\r\n                    className=\"loginScreen__getStarted\"\r\n                  >\r\n                    GET STARTED\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\nimport \"./ProfileScreen.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { auth } from \"../firebase\";\r\nimport Nav from \"../Nav\";\r\n\r\nfunction ProfileScreen() {\r\n  const user = useSelector(selectUser);\r\n  return (\r\n    <div className=\"profileScreen\">\r\n      <Nav />\r\n      <div className=\"profileScreen__body\">\r\n        <h1>Edit Profile</h1>\r\n        <div className=\"profileScreen__info\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"profileScreen__details\">\r\n            <h2>{user.email}</h2>\r\n            <div className=\"profileScreen__plans\">\r\n              <h3>Plans</h3>\r\n\r\n              <button\r\n                onClick={() => {\r\n                  auth.signOut();\r\n                }}\r\n                className=\"profileScreen__signOut\"\r\n              >\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport { auth } from \"./firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            uid: userAuth.uid,\r\n            email: userAuth.email,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <LoginScreen />\r\n        ) : (\r\n          <Routes>\r\n            <Route path=\"/profile\" element={<ProfileScreen />} />\r\n            <Route path=\"/\" element={<HomeScreen />} />\r\n          </Routes>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./app/store\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}